# -*- coding: utf-8 -*-
"""Prediction using Supervised machine learning

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vgERX42rOxmq3v3feUzKs1F0DuViLaXj

The spark Foundation - Data Science & Business Analytics Internship 

Authar - Manjiri Anil Bhavsar

Batch - March 2022

Task 1 - Prediction using Supervised machine learning

Simple Linear Regression
"""

import numpy as np
import pandas as pd

df=pd.read_csv('http://bit.ly/w-data')
print(df.shape)

df.info()

df.describe()

df.head()

df.dtypes

X=df['Hours'].values
Y=df['Scores'].values

X

Y

from sklearn.model_selection import train_test_split
X_train, x_test, y_train, y_test = train_test_split(X, Y,
                           test_size=0.2, random_state=0)

mean_of_x=np.mean(X_train)
mean_of_y=np.mean(y_train)

mean_of_x

mean_of_y

n= len(X_train)
n

a=0
b=0
for i in range(n):
  a+=(X_train[i]-mean_of_x)*(y_train[i]-mean_of_y)
  b+=(X_train[i]-mean_of_x)**2
slope_of_line=a/b
slope_of_line

c=mean_of_y-(slope_of_line*mean_of_x)
print(slope_of_line,c)

maxx=np.max(X_train)+1
minx=np.min(X_train)-1

x=np.linspace(minx,maxx,10)
x

y=c+slope_of_line*x
y

import matplotlib.pyplot as plt

plt.plot(x,y,color='red',label='Regression line')
plt.scatter(X_train,y_train,c='green' , label='scatter plot')
plt.xlabel('Hours')
plt.ylabel('Scores')
plt.legend()
plt.show()

print(x_test)
y_pred = c+(slope_of_line*x_test)

df = pd.DataFrame({'actual': y_test, 'Predicted': y_pred})
df

y_test

mean_of_y=np.mean(y_test)

sst=0
ssr=0
n=len(y_test)
for i in range(n):
  sst+=(y_pred[i]-mean_of_y)**2
  ssr+=(y_test[i]-mean_of_y)**2
r2=sst/ssr
print(r2)

x1=9.25
y_ans=c+(slope_of_line*9.25)
print("NO of Hours = {} ".format(x1))
print("predicted score = {}".format(y_ans))